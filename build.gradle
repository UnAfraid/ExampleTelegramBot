plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "org.sonarqube" version "2.8"
}

apply plugin: "java"
apply plugin: "java-library"
apply plugin: "distribution"

sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    implementation(group: "org.apache.logging.log4j", name: "log4j-slf4j-impl", version: "2.13.1")
    implementation(group: "org.apache.logging.log4j", name: "log4j-core", version: "2.13.1")

    api(group: 'com.github.unafraid.telegram-apis', name: 'CoreAPI', version: '1.0.9')
    api(group: 'com.github.unafraid.telegram-apis', name: 'InlineMenuAPI', version: '1.0.9')
    api(group: "org.telegram", name: "telegrambots", version: "5.0.1") // Telegram Bots API
    testImplementation(group: "junit", name: "junit", version: "4.12")
}

jar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes(
                "Built-By": System.getProperty("user.name"),
                // Update with your main class example below:
                "Main-Class": "com.github.unafraid.example.telegrambot.Main",
                "Class-Path": configurations.runtimeClasspath.collect({ "lib/" + it.getName() }).join(" ")
        )
    }
}

distZip {
    archiveFileName = "${project.name}.zip"
}

distTar {
    archiveFileName = "${project.name}.tar"
}

distributions {
    main {
        contents {
            into("lib") {
                from(configurations.runtimeClasspath)
            }
            from(jar)
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        }
    }
}

task stage() {
    dependsOn clean, shadowJar
}
shadowJar.mustRunAfter clean
